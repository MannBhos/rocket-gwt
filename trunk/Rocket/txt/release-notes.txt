
ROCKET GWT FRAMEWORK
--------------------

The ROCKET GWT library contains a number of widgets, GWT core library fixes as well other useful stuff extract from another project for an inhouse application at work. 
respository: http://code.google.com/p/rocket-gwt/
blog: http://rocket-gwt.blogspot.com/index.html
forum: http://groups.google.com/group/rocket-gwt?lnk=li
email: miroslav <dot> pokorny <at> gmail <dot> com

0.1  17 August 2006
-------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.1/Rocket-0.1.zip
Initial release.
This release of the Rocket GWT library contains a number of widgets, GWT core library fixes as well other useful stuff extract from another project for an inhouse application at work. 

Below is a brief overview and summary of some of the interesting bits and pieces within the library.

ADD BrowserHelper - A variety of browser specific helpers, browser detection, working with the window's title and status.
ADD SkippingIterator - A useful abstract iterator which makes it easy to provide an iterator view skipping items.
ADD IteratorView - Template that provides inbuilt fail fast support and other features.
ADD Tree & Branch - A different type of container that provides an tree / branch view of items. Deleting a parent node removes children as well and so on.
ADD LeastRecentlyUsedMap - A map which keeps a cap and automatically deletes when its capacity is exceeded.
ADD MultiValueMap - A map that allows multiple values for each key. 

ADD ElementWrapper - Easy authoring / wrapping of a Tag / element's properties without escaping to jsni.
ADD AbstractElementList - Easy template to provide a List view over a collection of DOM elements. This class makes it easy for client code to work with Widgets rather than Elements.
    A factory is called when necessary to create the wrapper when an item is fetched.
ADD DomHelper - A variety of misc helpers relating to the Dom.
ADD Message publishing and subscribing refer to rocket.client.messaging.
ADD RPC View of Serverside HTTP requests returns value object with status/code/captured content using both GET and POST modes. Could be used for fileuploading(havent tried).
ADD TabPanel - A better tab panel that includes a close button and events for various states of an individual tabs lifecycle.
ADD Menu -A better menu system including menu spacers, item disabling and compressed / expanded menus ( such as those you find in various Office / Windows products ).
ADD ContextMenu - A context menu may be attached to a widget via a right mouse button. After that the menu appears at which time the user can select / cancel.
ADD SortableTable - A table that contains columns which may be sorted using comparators. The relevant header also contains controls to support an ascending/descending sort.
    The data used for the sort may be different than that which appears within each cell. This allows sensible Date / number and other types sort.
ADD Spinner - A simple spinner, that is a control which uses increment/decrement widgets to increase/decrease a number value.
ADD SuperSpinner - An extension of Spinner that includes two additional controls for faster incrementing/decrementing of the value.
ADD CssPicker - A panel which includes buttons to allow selection of any of the pages stylesheets.
ADD PixelGrid -  A grid of blocky pixels which can be plotted or read using colours.
ADD ZebraFlexTable - Automatic handling of a table with a zebra effect for odd / even rows.
ADD Pager - This widget provides a paging control similar to the one that appears at the bottom of Google search results. Evnts may be monitored to allow programs to react to pager value changes.
ADD AutoCompleteTextBox - A TextBox with an automatically managed drop down list of matches.
ADD Card - A panel that includes a title and provision for adding widgets which appear within its title bar. It also contains a main content area.
ADD BreadcrumbPanel - A panel of breadcrumbs with typical breadcrumb behaviour managed as a stack.
ADD Form - A list view of a Form and its element. Getting by index returns the corresponding Widget eg a TextBox if the item at the given slot is a input field of type text. 
    Wrappers are also present for Reset/Submit/Hidden fields along with other widgets for the other already GWT types.
ADD Grid - Provides a grid of Widgets. 
ADD Life - Something fun which leverages PixelGrid to create a life simulation.
ADD VerticalPanel, HorizontalPanel - Fixed the iterators so that remove actually removes the widget from the panel and not only the internal Vector. I have had a quick look at the new 1.1 classes
                    and whilst WidgetCollection probably fixes this problem it does not appear to provide a fail fast iterator.
NOTE All classes come with tests be they demos or UnitTestCases

0.11  23 August 2006
--------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.11/Rocket-0.11.zip

FIX SortableTable - Improved repaint strategy
ADD SortableTableTest - Added controls which allow the user to add/remove rows(value objects) within SortableTable.
DOC MenuListener - Added javadoc describing class in detail.
ADD Cookie/CookieMap - Added new CookieMap class which provides a Map view of the browsers current cookies. Refer to accompanying TestCase for notes.
FIX StringHelper.split - fixed handling of attempt to split empty string with delimiters.
NOTE: Still works only with GWT 1.0.21 has not yet been upgraded to 1.1. Some minor changes will result due to changes in various GWT classes/interfaces.

0.12  26 August 2006
--------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.12/Rocket-0.12.zip

FIX StringHelper.indexOfIgnoreCase - wasnt finding strings at the boundaries(ones that started at the beginning / end of the string to be searched). 
ADD Throttler - A simple class which allows throttling or funnelling of multiple requests allowing only one within a short of period of time.

0.13  30 August 2006
--------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.13/Rocket-0.13.zip

ADD Tree - Added a new Tree which takes any widget (eg CheckBoxes, Labels etc) as its children. TreeItems may be permanently kept expanded with the expander control hidden.
    Listener events are fired before and after each of the tree events with the before events being vetoable. Iterators are also provided that not only visit the current nodes           children but also provides the capability to visit all descendants of the node in question. 
ADD TreeDemo/Test included.


0.14  3 September 2006
----------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.14/Rocket-0.14.zip

MOD Upgraded to GWT release 1.1.10, Changes listed below
MOD return type of add( Widget) and insert( Widget) from boolean to void
MOD argument of Timer.scheduleRepeating() from long to int
MOD return type of DOM.eventGetCharCode() from char to int
MOD Updated *.launch *.cmd to use new library release
DEL Deleted DeckPanel
MOD CssUnitScalingFileServlet query parameter names are no longer set via init-parameters but use values from **.server.BrowserConstants.

0.15  27 September 2006
-----------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.15/Rocket-0.15.zip

FIX FormHelper. fixed non public method within getFormElements(Element) iterator to avoid ClassCastExceptions being thrown.
ADD FormHelper.findElement( elementName )
DEL Panel/AbstractPanel reworked Card to remove dependencies from deleted classes.
ADD ObjectHelper - Added checkNotSame().
FIX StringHelper.split() & changed tests
ADD DomHelper - Added setFocus()
ADD TabPanel - added methods to set a tab's title previously only gettin was possible was provided.
ADD BrowserHelper - added getClientXXX where XXX = width/height which retrieves correct values for IE6 in strict mode.
ADD BrowserHelper - added getAvailableClientXXX where XXX = width/height
ENH SortableTable - assigned styleName(css classes) to different components within the table.
ADD css - Added project name "rocket-" to all widget style/class names.

TODO Need to fix x/y calculation of child list within SubMenuItem.open(). I think its related to broken Element.getAbsoluteXXX where XXX = X/Y.

0.16  2 October 2006
-----------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.16/Rocket-0.16.zip

ADD FormHelper.isInputTypeElement() 
ADD 4 new TabPanels were added namely describing the positioning of the tab titles themselves top(the original TabPanel), right, bottom and left.
MOD Moved Tab* classes from widget to widget.tab. TabPanel is now abstract with 4 new concrete sub-classes.
MOD Changed Tab style constants. 
ADD HorizontalSlider & VerticalSlider widgets with tests.
FIX BlockyPixel style was "blockyGrid" now "blockyPixel"
ADD BrowserHelper.prompt()
ADD DomHelper.toJavascriptPropertyName() - will move in next release to StyleHelper.


0.17 14 October 2006
--------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.17/Rocket-0.17.zip

ADD ObjectWrapper which is similar to ElementWrapper but wraps any DOM object.
MOD ElementWrapper refactored to extend ObjectWrapper. removed duplicate methods already present in new super class.
MOD Renamed AbstractElementList DomCollectionList. changed references from Element to JavaScriptObject, changed     visitWrappedElement() to unwrapWrapper(). Renamed test *.launch/*.cmd files, removed methods which duplicated     those already found in AbstractList which it inherits.
MOD Moved StyleHelper,StyleSheet and style constants from rocket.client.dom to rocket.client.style.
MOD StylesheetCollection is no longer a public class and has made into an inner class of StyleHelper.
FIX DomHelper.castToElement() Changed argument from Object to JavaScriptObject.
FIX DomHelper.setProperty( XXX ) removed check that validates that property was actually updated.
FIX (Issue#6) Relating to handle dragging and slider clicking not working correctly when the browser has been scrolled.
ADD DomHelper.getAbsoluteXXX() where XXX is Top/Left. The GWT code found in DOM is broken for strict mode IE this     is also used by Widget.getAbsoluteXXX(). Changed various references to DOM
ADD DomHelper.setAbsolutePosition( Element, x, y );
FIX DomHelper.hasProperty() & DomHelper.getProperty() and DomHelper.getXXXProperty() where XXX is 
    Boolean/Int/AsJavaScriptObject which was not handling undefined and null values correctly.
ADD WidgetHelper.getAbsoluteXXX() where XXX is Top/Left.
ADD WidgetHelper.setAbsolutePosition( Widget, x, y );
ADD StyleConstants added constants for all css properties.
ADD SpanPanel a panel which uses spans(SPAN) to house individual widgets rather than a table.
ADD DivPanel a panel that uses divs(DIV) to house widgets rather than a table.
ADD OrderedListPanel a panel that uses an ordered list(OL) to house widgets rather than a table.
ADD UnorderedListPanel a panel that uses an unordered list(UL) to house widgets rather than a table.
ADD MenuLists can now be opened up/down/right/left directions relative to their parent SubMenuItem.
DEL Removed support for expandable vertical menu lists, use VerticalMenuList instead.
FIX (Issue#) Fixed issue where by menu lists where not being positioned correctly when the browser client area     had been scrolled.
ENH Moved autoOpen from Menu to SubMenuItem
FIX Life removed stray print statement.
FIX SortableTable.removeUnnecessaryTableRows() fixed typo in method name.
ADD SortableTable added feature to retrieve row given a table row index.
ADD SortableTable added clear() which empties the table.
ADD DomHelper.eventGetToElement() includes a test to read the correct property for FF as the GWT impl was reading the wrong event property.
ADD InteractiveList
ADD InteractivePanel and reworked previous panel tests to use the widget.
ADD DomObjectPropertyList, DomObjectPropertyListElement list implementation which wraps and unwraps when writing/reading to a dom object's property.
REF Renamed AbstractIteratorWrapper to IteratorWrapper

0.18 15 October 2006
--------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.18/Rocket-0.18.zip

FIX Added strict HTML doctype to all test html pages.
ENH Changed cursor styles within Slider test.html 
FIX IteratorView.next() so it now throws NoSuchElementException if the iterator has been exhausted rather than generic Exception.
FIX InteractiveList clicking on the IteratorRemoveButton was calling iterator.next() not interator.remove()
FIX InteractiveList fixed logging of caught exceptions during attempted list operations.
ENH Changed public methods of TabPanel to accept TabItem which contains handles to the caption and content widgets. Also simplified/shortened public method names to longer include "Tab".
ADD AccordionPanel widget with 3 different flavours (VerticalAccordionPanel, LeftSideAccordionPanel, RightSideAccordionPanel).

0.19 7 November 2006
--------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.19/Rocket-0.19.zip

rocket.client.browser.*
ADD BrowserHelper.isOpera8(), isOpera9() and getOperatingSystem()

rocket.client.dom.*
ENH DomCollectionList added adopt()/disown() methods and calls them each time an element is added or removed.
ENH Added delegating method between add(Object), add(int,Object), remove(int) and target method.
ADD Added destroy() to DomCollectionList/ObjectWrapper/DomObjectPropertyList/DomObjectPropertyListElement to break cyclic references between wrappers and dom objects.
REF DomObjectPropertyListElement refactored XXXValueQuickly to XXXCacheValue where XXX is set/get.
ADD DomHelper.removeProperty()
FIX DomHelper.findAllChildrenOfType() now returns an unmodifiable List.
REF ObjectWrapper.toStringObject() -> toStringWrapped.
REF ObjectWrapper Removed "Property" from typed convenience getters/setters
FIX removed wrapper cache of DomCollectionList
REF Moved DomHelper.XXXProperty setters/getters to ObjectHelper. Removed "Property" from typed convenience getters/setters
ADD DomHelper.XXXProperty added overloaded methods to use index rather than propertyName
ADD DomObjectMap, DomObjectMapValue
ADD DomObjectList, DomObjectListElement

rocket.client.style.*
REF Renamed StyleHelper.getStyleSheetsCollection() to StyleHelper.getStyleSheets()
ADD StyleSheet which provides a List like view of a native StyleSheet object.
ADD Rule which provides an bean like view of a native Rule object
ADD Style which provides a Map like view of a native Style object.
ADD StylePropertyValue which provides a bean like view of a single Style object property value

rocket.util.client.*
ADD ColourHelper.getColour( name )using standard web colour names.
ADD CollectionHelper.unmodifiableList()
ADD PrimitiveHelper.checkEquals(), checkNotEquals(), checkBoolean()
REF Made ObjectWrapper into an interface and moved abstract ObjectWrapper class to ObjectWrapperImpl
ADD ObjectWrapper.removeProperty();
MOD ObjectHelper.setXXX() where XXX is the type now returns the replaced value.
MOD ObjectHelper.checkXXX() to only accept a message and not multiple strings naming parameters.
ADD StringHelper.checkEquals();
REF IteratorView, removed viewType argument from next0(), renamed getParentModificationCount() to getModificationCount, renamed modificationCounter to expectedModificationCount

rocket.client.widget
REF Renamed CssPicker to StyleSheetPicker. Also added test. also renamed setLabel()/getLabel get/setText.

rocket.client.widget.form.*
ADD Added equals() to all rocket.client.widget.form.* widgets.
FIX ResetButton.reset() implemented.
FIX SubmitButton.submit() implemented.
REF Renamed FormElementsListTestCase to FormElementListTestCase

rocket.client.widget.slider.*
REF Renamed AbstractSlider to Slider
FIX Slider.setValue accepted values greater than maximum value...
ADD Added clickRepeatRate to slider allowing repetition of mouse down events before/after the handle.

ECLIPSE project files
ADD Added -style DETAILED argument to all *.launch / *-compile.cmd files resulting in all generated javascript containing source and not obsfucated symbols.

GWT fixes
DomHelper.eventGetToElement() replaces DOM.eventGetToElement()  http://code.google.com/p/google-web-toolkit/issues/detail?id=229
PrimitiveHelper.characterDigit() http://code.google.com/p/google-web-toolkit/issues/detail?id=302

0.20 13 November 2006
---------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.20/Rocket-0.20.zip

rocket.client.browser.*
DEL DisabledElementEventStopper, LeavingApplicationListener

rocket.client.widget.*
ADD AbstractPanel Added indexOf( Widget) method.
ENH Added getParentElement() to DivPanel, OrderedListPanel, SpanPanel, UnorderedListPanel.
FIX AbstractPanel.remove(int) call remove0() before disowning widget. This gives an opportunity for sub-classes to use a valid connected element.
REF DivPanel, OrderedListPanel, SpanPanel, UnorderedListPanel, Refactored createElement() to createParentElement()

rocket.client.widget.splitter.*
ADD Splitter widget in two flavours HorizontalSplitter & VerticalSplitter.

0.21 28 November 2006
---------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.21/Rocket-0.21.zip

Upgraded to latest GWT release 1.2.22.

Refactored different areas within rocket, this basically means that rocket.client.package becomes rocket.package.client.*
allowing better organisation and grouping of client/server/test packages.

REF rocket.(client|server|test).rpc.* becomes rocket.remoting.(client|server|test)
REF rocket.(client|server|test).util.* becomes rocket.util.(client|server|test)
REF rocket.client.messaging.* becomes rocket.messaging.client
REF rocket.(client|test).collection.* becomes rocket.collection.(client|test).*
	REF Moved MapHelper.getKey() into CollectionHelper, deleted MapHelper
REF rocket.(client|test).widget.* becomes rocket.widget.(client|test).*
	REF rocket.client.test becomes rocket.widget.testing.*
REF rocket.(client|test|server).style.* becomes rocket.style.(client|server|test).*
	REF Moved CssUnitScaling from rocket.server.browser to rocket.style.server.*
REF rocket.(client|test|server).browser.* becomes rocket.browser.(client|server|test).*
    REF CookiesMap becomes CookieMap
REF rocket.(client|test).dom.* becomes rocket.dom.(client|test).*

rocket.browser.client.*
ADD BrowserHelper added getDocument() and getWindow()
FIX CookiesMap.keySet().iterator();

rocket.dom.client.*
FIX DomHelper.getParentContainerLeft/getParentContainerTop was not stopping at an ancestor with position:relative. (http://code.google.com/p/rocket-gwt/issues/detail?id=12)

rocket.remoting.*
ADD Created new Comet infrastructure which includes client/server side components.(rocket.remoting.*)

rocket.util.client.*
ADD HttpHelper added urlDecode().
ADD StringHelper added htmlEncode() and htmlDecode()

rocket.widget.client.*
FIX MenuList when showing a menu list a zindex (with a big)value is also set to ensure it appears in front of other widgets.
REF Renamed Card to CollapsablePanel, changed accompanying styles and constants etc.

DEPRECATED
DEL PrimitiveHelper.characterDigit removed due to Character.digit() being fixed by GWT 1.2.22. (http://code.google.com/p/google-web-toolkit/issues/detail?id=302)
DEL DomHelper.eventGetToElement removed due to being fixed by GWT 1.2.22 (http://code.google.com/p/google-web-toolkit/issues/detail?id=229&can=1&q=)

0.22 5 December 2006
--------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.22/Rocket-0.22.zip

rocket.collection.client.*
MOD IteratorView now throws ConcurrentModificationException when structural changes to the parent collection.

rocket.dom.client.*
ADD DomHelper.getBody()
ADD DomHelper.clone()

rocket.dragndrop.*
ADD New drag n drop functionality.

rocket.util.*
ADD StackTraceHelper - Throwable.getStackTraceElement() now returns an array of StackTraceElements that may be examined to walk the callstack in web mode.
ADD StackTraceHelper.getStackTraceAsString() returns a String that looks like the output of regular java's Throwable.printStackTrace().
TIP The outputted stacktrace is very similar to that of java with some minor changes.
    StackTraces are only meaningful when the translated javascript code is not obsfucated (eg style=PRETTY/DETAILED);
    Within a printed stacktrace package.className(filename:linenumber) the bit in between brackets is replaced with the arguments of the method if available.
    Because the this argument is sometimes a parameter translated javascript it will also appear in the argument list.
	The stacktrace will potentially contain extra stack frames showing the internal constructor calls within the newly created Throwable object -ignore these.    
    
rocket.widget.client.*
ADD HyperlinkPanel A new panel which is functions like a hyperlink with a twist. All widgets that are added do not receive events.
DEL HorizontalPanel - no longer required due to WidgetCollection fix
DEL VerticalPanel - no longer required due to WidgetCollection fix

DEPRECATED
DEL ObjectHelper.checkNotNull( String JavaScriptObject ); no longer needed due to fix in emulated Cast class

GWT
ENH com.google.gwt.emul.java.lang.Throwable modified to enable capturing of the current call stack when the Throwable is created, as well as lazily creating StackTraceElements.
ENH com.google.gwt.emul.java.lang.StackTraceElement modified to support include all internal fields are parameters to the constructor.
FIX com.google.gwt.lang.Cast.wrapJSO() Added try/catch to avoid javascript host exceptions when attempting to copy properties to a immutable native object. (http://code.google.com/p/google-web-toolkit/issues/detail?id=304)
    The Cast class actually lives in gwt-dev-XXX.jar (where XXX is the appropriate platform eg "windows") at /com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/.
FIX com.google.gwt.user.client.ui.WidgetCollection's iterator() has been modified to fail fast.
ENH com.google.gwt.emu.java.util.ConcurrentModificationException This exception is now available to be thrown by iterators detecting concurrent modification of the parent collection

TODO Need to make GWT emulated collection class iterators fail fast and throw ConcurrentModificationExceptions.

0.23 6 December 2006
--------------------
Download from http://rocket-gwt.googlecode.com/svn/tags/0.23/Rocket-0.23.zip

Minor release that addresses a silly bug within IE6.X
NB Unfortunately stacktraces are not supported by Opera,Safari,Konqueror as they do not expose the necessary javascript
functionality to make this possible.

rocket.util.StackTraceHelper
FIX Stopped infinite loop that was occuring in Internet Explorer 6.x
ADD Added test to show server side stacktraces are not lost and show up in client side stacktraces.
MOD StackTraceHelper-compile.cmd to output the same translated javascript using all three styles: OBS/PRETTY/DETAILED to individual sub directories under the 
    www/rocket.util.test.stacktracehelper.StackTraceHelper directory.(To properly test serverside stacktraces run the StackTraceHelper hosted mode followed by
    clicking on the appropriate www/rocket.util.test.stacktracehelper.StackTraceHelper/XXX demo.
    
0.24 17 January 2007
--------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.24.zip

* Added ant build.xml to take care of everything related to building a new release & also removed *.cmd files.
* Refactored Cookies and support classes to cookies module.
* Introduced a testing package which mimics JUNIT TestCase and TestRunner. 
  Unlike the GWT supported GwtTestCase which uses a hidden browser the tests are actually a regular module
  with the browser visible at all times.
* Made just about all jsni methods private except for those that typically have no arguments which are usually 
  tested within their wrapper method.
* Renamed accompanying impl subpackages and classes to support. These classes should not be used directly in user code.
* Moved stacktrace support classes into its own jar file (Rocket-stacktrace.jar).
* Added two new Map views of the inline style object and the computed(current) style for an element.
* Refactored BrowserHelper browser specific jsni methods to support classes (rocket.browser.client.support.*)
* Refactored StyleHelper browser specific jsni methods to support classes (rocket.style.client.support.*)
* Fixed coordinates of element being dragged when the viewport was scrolled.(DraggablePanel$DragHandle)
* Added more special cases to StyleHelper.getComputedStyle(), getInlineStyle() and setInlineStyle() enabling easy 
  non browser access of various more properties. Eventually hopefully all properties can be accessed without worrying 
  about browser differences.
* StylePropertyValue objects are now disconnected. To update the backing style property the appropriate Map must be put again.
* Renamed CometServerConnectionFailure exception to CometServerConnectionFailureException.
* Renamed Slider.handleMouseDown() to handleHandleMouseDown()
* Fixed several widgets (Composite widgets) which were sinking their interested event bits and setting their EventListener outside of onAttach. 
* Renamed WidgetConstants.BREADCRUMB_* to BREADCRUMB_PANEL_*, classname also renamed from rocket-breadcrumbs- to rocket-breadcrumbPanel
* Deleted DialogBox which was previously the GWT DialogBox class with a few fixes.
* Fixed FormHelper.getFormElements() iterator to be destroyable allow breakage of cyclic references.

GWT
FIX com/google/gwt/emul/java/lang/Character.digit(char,index) was failing when converting A-F and a-f from hex to decimal.
    (http://code.google.com/p/google-web-toolkit/issues/detail?id=302)

0.25 22 January 2007
--------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.25.zip

* Added ResizablePanel widget which accepts a child widget and adds handles so that the user may resize the child. It is possible to
  set the min/max width and height. Events are also fired whenever the size of the panel changes due to handle dragging.
* Also fixed outstanding AutoCompleteTextBox issue

0.26 22 February 2007
---------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.26.zip
* Added add/has/removeClass names from an Element
* Improved, fixed a number of inline,computed style properties.
* Fixed building of rocket.jar and rocket-stacktrace.jar to avoid reported jdk class version problems.

0.27 8 June 2007
----------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.27.zip
This release requires JDK 1.4 and any GWT 1.4 RC.
* Updated a few customized gwt classes (com.google.*) to continue with functionality.
* Fixed BrowserHelper.getContextPath() to never return with a trailing slash "/" mimicing HttpServletRequest.getContextPath().
* Removed try/catch which showed exception inside an alert within MessageBroker.publishMessages( List )
* Move enableTextSelection(), disableTextSelection, clearTextSelection from DragNDropHelper to SelectionHelper.
* Fixed handling of text selection enabling/disabling.
* Added ability to add widgets to a TabItem in two forms before and after the caption. This allows easy addition of spinners etc.
* Renamed (corrected) package name rocket.widget.client.tab to rocket.widget.client.tabpanel
* Added opposites for all the assertEquals() methods for the Test class.
* Added getters to retrieve Element's from a JavaScriptObject using an index or propertyname (String).
* Added ability to query for user selected and programmatically create or change selection end points.
* Added ability to test if browser is in quirks mode BrowserHelper.isQuirksMode()

0.28 11 June 2007
----------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.28.zip

* Added OutstandingRpcTracker which provides an easy mechanism to add spinners(like firefox) and loading messages(like gmail) whenever one or
  more rpcs are underway and automatically hidden when all outstanding rpcs finish.
* Added seemless support for fixed positioning via StyleHelper - this achieved by using dynamic expressions. Refer to javadocs for more details.
* Fixed a bug within StringHelper.split() which was not ignoring sequences of more one delimiters.
* Separated jar files that support web mode stack traces into a separate package. To use stacktraces simply include rocket-stacktrace.jar.

0.29 25 June 2007
----------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.29.zip

* Added ability to escape placeholders within StringHelper.format() messages.
* Fixed HttpHelper.isXXX methods not to fail if parameter is null. When null the test simply fails.
* Deprecated HttpHelper.urlEncode() replacing all uses with GWT's URL.encodeComponent(). Also removed tests
* Added rocket.generator package which basically to assist with building GWT Generator code generators.
* Added generator to generate stubs that automatically map json encoded responses to a java graph using annotations.
* Added generator that allows java client code to invoke remote json services in a fashion that closely mimics GWT rpc's, eg
  java type parameters, calls AsyncCallback with a deserialized result or exception.
* Removed most gwt stylenames when using GWT widgets to assemble rocket widgets.


0.30 3 July 2007
----------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.30.zip

* Fixed GeneratorContext.getPackageName() to not get stuck in an endless loop for classes in unnamed package.
* Added facility to test generators by using TestGenerator and accompanying support classes. 
* Fixed Remote.gwt.xml module by adding generator mapping for RemoteJsonService
* Added dependency injection support via the rocket.beans package. Most of the spring concepts except for interceptors and destroy method are supported.
* Added a number of wikis for various modules within the library.

0.31 31 July 2007
----------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.31.zip

* Added ability to pass arguments to a constructor when creating a bean.
* Fixed a silly DTD cardinality bug only allowing one value for properties etc(rocket.beans)
* Changed StringHelper.format() placeholders syntax from just "{xxx}" to "${xxx}".
* Added a new StringHelper.format() which accepts a Map of placeholders <-> values.
* Added new classes to help with realizing placeholders with values (rocket.text.client.*)
* Added ability to provide a replace placeholders with values from a properties file by including a <placeholder file="..." /> tag.
* Fixed numerous factory bean template methods to throw Exception, which should let constructors and setters which throw checked exceptions to compile.
* Added ability to specify advices (Before, AfterReturning, AfterThrowing and MethodInterceptors) to any public bean method.
* Fixed selection support for Safari (issue=32)
* Added template factory method to DraggablePanel.createDragHandle0 providing the opportunity to create handles for widgets when they are dragged.
* Fixed Horizontal/VerticalSliders which were broken when the window was scrolled.
* Restored lost tree.launch file to project.
* Added tests for Spinner and SuperSpinner widgets.
* Change all protected widget factory methods (create* belonging to rocket.widget.** ) to only create and not set their own property. Subclasses 
  that override these methods no longer need to also set the corresponding property.  
* Abstracted class components, classes, constructors, methods and fields (rocket.generator.rebind.*) so classes may be built by assembling objects rather 
  than SourceWriter.print'ing. The com.google.gwt.core.ext.typeinfo.J* and java runtime classes have both been abstracted to help with creating generators 
  for the former and testing for the later.  
* Also included ability to build code blocks (eg method body's) from text file templates (rocket.generator.rebind.codeblock.*).
* Also added a number of template visitor classes to help with visiting various class components, finding overridden methods etc.
  AllMethodsVisitor, ConstructorParameterVisitor, MethodParameterVisitor, ReverseSuperTypeVisitor, SubTypesVisitor,
  SuperTypesVisitor, TypeConstructorsVisitor, VirtualMethodVisitor.(rocket.generator.rebind.util.*).
* Fixed RemoteJsonService to set the correct content-types (GETs and POSTs), and content-length for POSTS.
* Rewrote all code generation classes to use new generator abstraction aka beans, json, remote json service.
* CometClient now logs a message if it detects that the serializer about to be used to deserialize the incoming payload was not generated using the modified
  ProxyCreator.
* The customised ProxyCreator (the generator that creates classes to handle serializing of rpc objects) now logs a message, this should help make it easier to 
  spot classpath problems.
  
0.32 3 August 2007
----------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.32.zip
  
* Fixed a silly bug which occured when reapplying changes to ProxyCreator (The GWT class that creates rpc clients and (de)serializers) when upgrading from 1.4.3 to 1.4.10.

0.33 13 August 2007
---------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.33.zip

* Fixed Json serializer (JsonSerializerGenerator) to skip transient and final fields and report problems if a final instance field is encountered.
* Fixed DomHelper.checkInputTag previously assertion logic failed if the element passed the test. This has been corrected.
* Deleted DomHelper.toString( Element ). Refactored references to use GWT's DOM.toString( Element )
* Added HtmlTemplateFactoryGenerator which takes a HtmlTemplateFactory interface and implements any defined getters, binding elements from the dom to GWT widgets using an id.
* Fixed a few ObjectHelper.setters which all return the previous value which failed when the previous value was undefined.
* Added a new viewport widget which may be used to create a viewport of tiles similar to that found in Google Map's. The user may drag tiles about, with tiles are only 
  fetched for new tiles that appear due to scrolling.
* Fixed proxying (aop) of non final public methods (eg wait() ) belonging to java.lang.Object.

0.34 4 September 2007
---------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.34.zip

* Added a new DatePicker widget.
* Added new method to test float/doubles for equality including a epsilon value.
* Added range checking to Colour red, green and blue setters.
* Added new HueSaturationValue class which can be used to manipulate a colour expressed as hue/saturation/value. 
  Methods are available that allow conversion to and from Colour.
* Improved SortableTable performance so that it doesnt request widgets for each cell each time it redraws itself. Widgets are still detached and 
  reattached during a redraw. The sorted list of rows is now read/writable.
* The ascending / descending url which is added to sortable columns is now an abstract method rather than two properties.
* Introduced a new Composite which adds many new features to make it easier to start authoring a new composite widget. All the basic event Listeners 
  collections are already included. The new composite widget provides some template methods.
* Refactored existing widgets to use new Composite/Panel classes. Most widgets now receive all/most of the basic events.
* Fixed bug with SuperSpinner where the wrong factory was being called and presented as the down value widget.
* Fixed a few broken demos.
* Made a few public widget helper classes package private.
* Dropped Helper from a helper class names, BrowserHelper > Browser, DomHelper > Dom, DragNDropHelper > DragNDrop, StackTraceHelper > StackTrace
* Also several methods to Browser isSafari, isOpera and getMousePageX/Y within an event.
* Deleted CookieHelper and moved static methods to Cookies.
* Renamed DragNDropListenerImpl to DragNDropListenerAdapter
* Big reorganisation of methods belonging to StyleHelper. xxxComputedXXX methods have been moved to ComputedStyle, xxxInlineXXX methods have been moved to 
  InlineStyle.
* Deleted SelectionHelper and moved static methods to Selection (singleton getter etc).
* Fixed Selection.delete() for Safari.
* Fixed Slider widgets background click behaviour so the handle smoothly glides towards the mouse cursor.
* Renamed StackTrace.getStackTraceAsString to asString
* Added new HorizontalVerticalSlider.
* Deprecated Life widget which was more of a demo rather than a reusable Widget
* Verified to work with GWT 1.4.60 release.

0.35 5 September 2007
---------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.35.zip

* Fixed and reapplied customisations to ProxyCreator which was updated again in GWT 1.4.60.
* Added a new Generator which builds a TestBuilder from a TestBuilder.class literal. WebPageTestRunners.getTestBuilder() can have its test methods automatically
  discovered via deferred binding of a TestBuilder subclass. The buildCandidates method must include a @testing-testRunner which points to the test class being run.
  Each test method must have an additional annotation @testing-testMethodOrder XXX where XXX is a number. This value is used to order the execution of each test method.
* Changed json serialization annotations, added @jsonSerialization to existing annotations @javascriptPropertyName becomes @jsonSerialization-javascriptPropertyName, 
  @listElementType becomes @jsonSerialization-listElementType, @setElementType becomes @jsonSerialization-setElementType, @mapElementType becomes @jsonSerialization-mapElementType, 
* Changed json rpc annotations, @httpRequestMethod becomes @jsonRpc-httpMethod, @httpRequestParameterName becomes @jsonRpc-parameterName
* Fixed a bug relating to testing if user mouse selection is enabled for an element.
* Fixed a bug relating to attempts to set css properties (zIndex) which actually returned integer values rather than String values. ObjectHelper.setString() returns the previous 
  value as a String.
  
0.36 10 September 2007
----------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.36.zip
  
* Added support to serialize from java objects to json.
* Added ability to create interfaces (both standalone and nested) using rocket's generator and type system.
* Streamlined development effort required to use comet client. Developers no longer need to create the two dummy GWT RPC service and async interfaces. These are automatically generated 
  by a new comet client generator.
* Added support for json rpc POSTS. A new annotation @jsonRpc-inputArguments selects whether input parameters are sent as request parameters or json rpc encoded.
* Improved accuracy of NewMethodImpl which now checks its abstract flag before writing its body. If the method is abstract the body is skipped.

0.37 XXXXX 2007
----------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.37.zip

* Fixed Dom.isInput() which was using the wrong method to retrieve the given elements "type" attribute. Should be DOM.getElementAttribute() not DOM.getElementProperty()
* Added Dom.isAttached( Element ) which tests if the given element is attached to the DOM.
* Added Dom.removeFromParent( Element )
* Improved the CometGenerator so that it fails if it detects that the customised ProxyCreator is not being loaded. This has been the source of most comet related problems. This 
  activate attempt at reporting classpath issues should help everyone.
* Added abstract void buildDropDownList method to AutoCompleteTextBox (previously drop down lists had to be built during a keyUp event).
* Fixed AutoCompleteTextBox to rebuild drop down list when user hits backspace. Previously rebuilding the list was delayed until the user typed in another "non editing" key.
* Added new primitive widgets which contain all the functionality of the GWT equivalent with additional constructors to accept elements from the dom.
  Note that no separate PasswordTextBox class exists, with password input fields created via new TextBox( true ). Try BasicWidget's demo.
* New FormPanel widget contains all the functionality of the GWT FormPanel with the additional ability to convert form elements into widgets which may be fetched via get() or iterator().
* Removed rocket.widget.client.form.* package (functionality has been superceeded by new FormPanel widget) and moved helper methods from FormHelper to 
  WidgetHelper less List createFormElements().
* Renamed Grid widget to GridView. Also renamed accompanying artefacts including styles, demo etc.
* Removed WidgetProvider class and move methods to GridView as abstract methods.
* Updated HtmlTemplateFactory (including generator) to now use introduced primitive widgets rather than the corresponding GWT primitive widgets.
* Fixed bug with XXXSplitterPanel.remove which was failing to delete the removed widget.
* Removed StyleHelper.buildCompound. Widget styles must not be built using String concatentation with the minus sign between components.
* Reworked get computed width and height for IE so the value is computed rather than trying to use currentStyle.
* Fixed bug with drag n drop when window was scrolled.
* Introduced new event system which includes different classes with appropriate events for each basic event type. This removes the need to use
  the DOM.eventXXX methods.
* Reworked all widgets to use new typed event objects.
* Reworked and significantly improved base classes for creating widgets and panels (refer to Widget,CompositeWidget, Panel and CompositePanel). Each
  includes support for hijacking elements from the DOM. All widgets now use the new object oriented typed event system.
* All ObjectHelper setters now return void instead of the previous value.
* Fixed ObjectHelper methods which return String's to coerse ints to Strings. This prevents problems in hosted mode.
* Added new method to Event to disable browser context menus. Once disabled they may not be reenabled.
* Moved Dom.changeNonBreakingSpaceToSpace to StringHelper. Also added StringHelper.changeSpaceToNonBreakingSpace().
* Smartened up look, feel and features demonstrated of various demos.
* Updated all widgets to retrieve the styles they add to individual assembled components from appropriately named getters. This allows sub classes to change styles by overriding the 
  appropriate method.
* Renamed TreeItem.setWidget/getWidget to setMainWidget/getMainWidget (this overcomes clash with set/getWidget from CompositeWidget)
* Removed CollapsablePanel use GWT's DisclosurePanel.
* Fixed a bug where json deserializing was falling over when encountering null values.
* Reworked TabPanel events to have their own types. TabListener updated to match new event types.
* Renamed TabPanel.getIndex() to indexOf().
* The onTabClosingEvent is now only fired when a tab is closed by a user rather than whenever a tabItem is removed.
* Reworked AccordionPanel events to have their own types. AccordionListener updated to match new event types.
* Replaced InteractiveList and InteractivePanel and logging to a VerticalPanel of messages with Window.alerts
* Deleted MenuListenerImpl (aka MenuListenerAdapter).
* Simplified Menu events into a single event MenuOpenEvent. MenuListener is also updated to match new event types.
* Removed PixelGrid(interface) and BlockyPixel(implementation).
* Made Colour serializable (now implements java.io.Serializable).
* Reworked Viewport to only fire ChangeEvents when it is scrolled or moved. Also moved Viewport class to rocket.widget.client.
* WidgetHelper.findWidget - Swapped test of element with widget element.
* Reworked and significantly improved Drag n drop, try demo.
* Drag n Drop events are now fully fledged objects.
* The dragged widget may be changed by dnd listeners by ( setDraggedWidget() ).
* Refactored all *Helper.check* methods so the format is consistent, message, expected value and test value.
* Fixed Opera selection support code which was querying the wrong method/property to get the native selection object.
* Fixed Slider and SplitterPanels widgets so they dont select text as they are dragged in Opera.
* Added a new page that provides links to all runnable demos.

0.38 6 November 2007
--------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.38.zip
* Changed InlineStyle.setString/setColour/setUrl to do nothing if the property value is null.
* Renamed HorizontalVerticalSlider to FloatingSlider.
* Added ability to set a background widget to all Slider widgets.
* Fixed issue common to all Slider widgets where clicking on the slider background didnt stop the handle once it had reached the clicked spot.
* Sliders also now also update the width and height of any given background widget so that its dimensions match the content of the slider.
* Changed the method signatures for both Panel.insert0(Widget,int) and Panel.insert0(Element,int) to void as the Panel.insert ignored the Element returned by Panel.insert0(Widget,int).
* Modified bean-factory.dtd to allow mixing of bean, remote-json-service, remote-rpc-service, advice elements in order.
* Corrected a number of element types, made all id attributes a "ID" and bean-reference a CDATA rather than IDREF.
* Improved error messages within BeanFactoryGenerator to also include whereever possible line/column number of xml parsing problem.
* Improved BeanFactoryGenerator to escape unsafe characters for generated types (bean id's are used to name generated factory beans type namesetc).
* Minor fix, generated BeanFactory's actually implement the passed in interface, previously one could only cast to BeanFactory and not the class literal passed to GWT.create().
* Fixed bean references bug where bean references failed if bean type was a subclass or implementing interface of property type.
* Fixed bug where beans couldnt include a reference (using bean-reference) to a remote-rpc-service or json-rpc-service tag declared bean.
* Fixed StringHelper.split behaviour which was not returning empty tokens.
* Renamed getter to fetch the suffix of a CssUnit from getValue() to getSuffix().
* Fixed ZebraFlexTable which was inserting cells via prepareCell when it shouldnt have.
* Dropped "6" from Browser.isInternetExplorer6 method.
* Fixed StringHelper.htmlEncode/Decode to not handle apostrophes and apostrophe entities.
* Fixed Pager widget to show pages along in between next/previous button rather than links to items.
* Renamed the Pager currentPage property to currentItem
* Changed Pager to automatically redraw when currentItem is updated.
* Modified default values for Pager previous and next link/buttons.
* Added method to fetch the names of all properties from a JavaScriptObject - ObjectHelper.getPropertyNames()
* Reworked style support classes from 4 monolithic classes into separate classes for type of style(Inline,Computed,Rule) and browser (InternetExplorer,FireFox,Opera,Safari). 
  Public interface of InlineStyle, ComputedStyle, RuleStyle, StyleSheet remain constant, only implementation has changed.
* Renamed StyleConstants to Css.
* Renamed DatePicker to Calendar (includes styles).
* Changed the return type of KeyEvent.getKey() from char to int.
* Added a number of methods to KeyEvent to help test the key code or type of key for the event, eg getFunctionKey(), isBackspace(), isCursorXXX, isEditing, isNavigation etc, 
* Updated Safari DOM support class to translate key codes for special keys like BACKSPACE to standard values.
* Added method to retrieve char from KeyEvent
* Standardized protected event handling method names, renaming any handleXXX to onXXX for all Widgets (includes DnD).
* Fixed SubClassVisitor which was getting stuck in an endless loop (useful when writing generators).
* Added a new ConcreteTypesImplementingInterfaceVisitor which may be used to visit all concrete types for a given interface.
* Added a new ReachableTypesVisitor which provides all concrete types that are reachable from a given concrete type.
* Fixed CheckBox style name (was missing "-" due to a typo in WidgetConstants).
* Reworked GeneratorContext from being an abstract class into an interface.
* Introduced a new SourceWriter which contains identical methods as those found in com.google.gwt.user.rebind.SourceWriter with new commit() 
  and rollback() methods. The rollback method is currently unsupported until the GWT adds the ability to cancel or rollback a newly generated type.

0.39 16 December 2007
---------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.39.zip
* Updated NewFieldImpl to not automatically add a semi colon ";" to all field values. Semi colons are now only added to literals.
* Added guard to NewMethodImpl so when writing it complains if an attempt is made to write an abstract method that contains a body.  
* Added method to Type to retrieve the runtime name of a type. This is mostly due to inner classes using a dollar sign '$' as a separator rather than dot '.'.
* Reworked the setting of nested type names, using setNestedName() rather than setName() which now results in an UnsupportedOperationException being thrown.
* Added ability for one BeanFactory xml file to include other files via the new include tag. Cycles are detected with an exception being thrown in such cases.
* Added factory method to NewType to create new initializers.
* Added support to add comments and metaData to all new class component types. These are automatically written to the generated class source.
* Minor fix, corrected "generated at" message included in javadoc to include the generator name.
* Added several skipXXX and visitXXX methods to ReachableTypesVisitor that are called for each type that implements an interface, is a super type or sub type of another type.
* Added extra visit methods to ReachableTypesVisitor to differentiate between a super, type, and sub type being visited.
* Added support to generator package for array types represented by the GWT TypeOracle.
* Refactored GeneratorContextImpl into a true abstract class without any reference to any GWT TypeOracle class, these have been moved to the newly introduced TypeOracleGeneratorContext.
* Hacked TypeOracleGeneratorContext to mark all jdk concrete collection types (ArrayList,Vector,HashSet,HashMap,Stack) to be serializable.
* Added ability to test logging level via GeneratorContext, isTraceEnabled(), isDebugEnabled(), isInfoEnabled()
* Fixed Type.getSubTypes() to only return immediate sub types and not all sub types.
* Reworked NewType and related sub interfaces removing all mention of GWT GeneratorContext.tryCreate() and then holding onto the PrintWriter to emit source.
* Changed strings which were previously surrounded by brackets to double quotes.
* Improved javadoc and reworked implementation of one or two methods. 
* Renamed methods which take an iterator and return either a Object[] or List.
* Improved SubClassVisitor so that it doesnt visit any sub type more than once.
* Fixed a bug with BeanFactoryGenerator where it was previously failing to find a setter for a referenced bean was actually a FactoryBean. An annotation must now exist on the 
  FactoryBean to declare the type of beans it produces (analogous to Springs's Class FactoryBean.getType().  
* PrimitiveTypes now return an EmptySet for getSubTypes(), getInterfaces(), getMethods(), getFields(), getConstructors(), getNestedTypes() rather than throwing UnsupportedOperationExceptions.
* Added support for specifying if singleton beans are lazy loaded or eager via a new attribute "lazyInit" added to the bean tag (initialized on bean factory startup).
* Improved generators so that new fields, methods and nested types are sorted before writing. Sorting is typically by staticness and name.
* Added support to bind Json number values to and from java.util.Date instances.
* Fixed writing of javadoc annotations by any class component (previously all values were comma separated when they should have been separate entries with the same name).
* Fixed TypeOracleGeneratorContext to make all types serializable if their jdk counterpart is also serializable, aka java.lang.String now implements Serializable.
  This change only exists within a rocket GeneratorContext, nb that the original JClassType's are not modified in anyway.
* Created TestSuites for each and every module, placing them in rocket.<moduleName>.test package
* Improved toString of various rocket generation classes.
* Introduced SerializationFactory which accepts annotations of readable/writable types which mark which types and their reachable types will be supported by the provided factory
* Introduced a new java rpc module which provides much of the facilities provided by the Gwt RPC system but uses the new serialization module.

0.40 3 January 2008
-------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.40.zip

Browser
* Added a Location class which returns all the portions of the window.location object as well as read only map values of query string parameters.

Bean
* If a bean implements BeanFactoryAware this is satisfied prior to invoking the setting of other properties.
* Refactored bean factory generator support classes(mostly moved templated files into their own subpackages).
* Significantly improved logging produced by BeanFactoryGenerator to be more readable into a formatted tree structure(was previously very flat).
* Added ability to specify aliases for beans via the alias element which has two attributes name (the alias name) and bean(the bean that is the target of alias).
* Added BeanNameAware interface which when implemented provides a mechanism for a bean and its factory beans to learn of their name.
* Extracted an invoke method from JavaRpcServiceMethodInvoker which takes the service provider, method and parameters for purposes of overridding 
  from the unmarshalled incoming request.
* Added support for disposing singleton (prototypes are not supported, holding any prototype reference would prevent garbage collection) 
  beans that implement DisposableBean or define a custom destroy method with their bean tag.
* Added support for nested(anonymous) beans within constructor and properties.
* Added support for setting null values via the null element.
* Merged bean factory, remote-json-rpc and remote-java-rpc tags into a single rpc tag. Changed address to service-entry-point and interface to service-interface.
* Simplified rpc element attributes from advisorBeanId to advisor, targetBeanId to target and methodExpression to methods.
* Modified bean-factory.dtd public id to match rocket version.
* Enhanced MethodInvocation to include new properties about the proxy target method, name, enclosing type name, parameter type names,  is it native ? and return type name.

Collections
* Added unmodifiableSet and unmodifiableMap methods in addition to unmodifiableList to CollectionHelper

Dom
* Deprecated Dom.getAbsoluteXXX where XXX is Left or Top in favour of the equivalent Gwt DOM methods.

Event
* Added to MouseEvent ( and due to inheritence and all sub classes for the click, double click, down, up, move, out, over and wheel events ) methods to retrieve the mouse coordinates relative
  to the target element.

Generator
* Modified StringLiteral to accept empty Strings literals, previously it would throw an exception.
* Updated new class components new Types, Initializer, Constructor, Methods and Fields to create a tree like log when emitting their source code representation.
* Reworked TemplateCodeBlock subclasses that should really extend TemplateFileCodeBlock

Project
* Cleaned up sub modules.gwt.xml files to only include modules they actually require.
* Deprecated ElementWrapper, ObjectWrapperImpl, ObjectWrapper, EmbeddedObject

Remoting
* Fixed deferred binding rules for Comet (Remoting.gwt.xml), previously broken rules meant that the comet client was not detecting server connection failures in IE.

Util
* Fixed StringComparator.COMPARATOR to be an exact and not case insensitive comparator.
* Moved all ObjectHelper methods JavaScriptObject getter/setter methods to JavaScript
* Moved ObjectHelper,StringHelper,HttpHelper check methods ( generally those that start with "check" )to Checker.
* Moved ObjectHelper,StringHelper,HttpHelper test methods ( generally those that start with "is") to Tester.
* Remainng ObjectHelper,StringHelper,HttpHelper methods have been moved to Utilities
* Renamed IoHelper to InputOutput.
* Simplied check methods (most removed common check prefix) in Checker.
* HttpHelper.encodeForm deprecated (duplicate of Widgets.encodeForm )

Widget
* Removed tree widget as functionality has been superceeded by GWT's own Tree widget.
* Removed SplitterItem.remove() which was just calling the parent SplitterPanel.remove( this );
* Made HyperlinkPanel a simple panel ie it can only have one child.
* The initial menu list that opens when clicking on a widget with a ContextMenu (actually embedded within a ContextMenu panel) now opens at the location of the click.
* ContextMenu now fires a new MenuOpenEvent subclass called ContextMenuOpenEvent ( a sub class of MenuOpenEvent) has been created and includes getters to retrieve the initially clicked upon 
  Element/Widget and mouse position details.
* Renamed WidgetsHelper to Widgets, as well moving various form related helper methods to Dom.

0.41 27 January 2008
--------------------
Download from http://rocket-gwt.googlecode.com/files/Rocket-0.41.zip

Beans
* Fixed aspects so they can be used in conjunction with any declared rpc (via the rpc tag).
* Fixed/enhanced InterceptorChain to support invoking MethodInvocation.proceed() more than once (Issue#41)
* Regression that caused failures (BeanFactoryGenerator complains that it cant find a setter) when setting properties with a bean produced by a FactoryBean.
* Referenced beans within List, Set or Map properties were broken resulting in NPE during the step where generated factory beans were emitting their source.
* All beans are processed in alphabetical order with nested beans always appearing last after all properly named beans. Functionally this change in semantics is
  unimportant.

Browser
* Added Location.setHref method - equvialent to location.replace(URL) and Location.reload()

Generator
* Enhanced GeneratorContext to include a method getPropertyValue() to retrieve a module property value.
* Fixed Generator to cleanup any reference to its GeneratorContext, this helps prevent a memory leak because generator instances are cached by GWT.

Json
* Merged former @jsonSerialization-listElementType, @jsonSerialization-setElementType, @jsonSerialization-mapKeyType, @jsonSerialization-mapValueType into a single annotation @jsonSerialization-type
* Fixed serializers which handle wrapper types to return JSONNull if the incoming instance was null, previously resulted in a NPE (Thanx Vincente Ferrer)

Logging
* Added new module which includes a LoggerFactory which accepts categories which can resolve to different loggers with individual levels. Logging statements which are
  below their threashhold for their parent logger are optimised and removed from source. All category, level and logger class names are taken from rocket.logging.Logging.properties
* The query string is parsed for a "logging" parameter which may be used to select one of two compilation packages, one with and the other without logging statements.
  are optimised and removed
* Several client side loggers are present, as well as a logger that sends all messages to the server. Server logger components are available that support commons logging, log4j or jdk logging.

Remoting
* Fixed Rpc.setServiceDefTarget(Object,String url) where ServiceDefTarget test was the wrong way around.
* Made rocket.remoting.server.java.JavaRpcServiceMethodInvoker.createSerializationFactory protected rather than private allowing serialization factory to be customised via overriding this method.\
* Corrected JavaRpcClientGenerator which was ignoring annotations for collection types, List, Set and Map.

Serialization
* Updated blacklist (rocket-Serialization) to include extra GWT packages that should never be serialized (http+json).
* Updated blacklist (rocket-Serialization) to include junit framework classes.
* Fixed a bug which was causing ThrowableReader to attempt to deserialize non sub classes of Throwable.
* Merged former @serialization-listElementType, @serialization-setElementType, @serialization-mapKeyType, @serialization-mapValueType into a single annotation @serialization-type
* Fixed JavaRpcServiceServlet to actually call factory method createRpcServiceMethodInvoker, previously code was erroneously doing a new RpcServiceMethodInvoker.
