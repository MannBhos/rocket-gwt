<module>
	<inherits name="com.google.gwt.junit.JUnit"/>
	<inherits name="rocket.User"/>
	<source path="client" />

	<generate-with class="rocket.generator.test.generator.rebind.ClassTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.ClassType" />
	</generate-with>	

	<generate-with class="rocket.generator.test.generator.rebind.BooleanTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.BooleanType" />
	</generate-with>	
	
	<generate-with class="rocket.generator.test.generator.rebind.ByteTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.ByteType" />
	</generate-with>	
	
	<generate-with class="rocket.generator.test.generator.rebind.ShortTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.ShortType" />
	</generate-with>	
	
	<generate-with class="rocket.generator.test.generator.rebind.IntTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.IntType" />
	</generate-with>	
	
	<generate-with class="rocket.generator.test.generator.rebind.LongTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.LongType" />
	</generate-with>	
	
	<generate-with class="rocket.generator.test.generator.rebind.FloatTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.FloatType" />
	</generate-with>	
	
	<generate-with class="rocket.generator.test.generator.rebind.DoubleTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.DoubleType" />
	</generate-with>	
	
	<generate-with class="rocket.generator.test.generator.rebind.CharTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.CharType" />
	</generate-with>	
	
	<generate-with class="rocket.generator.test.generator.rebind.VoidTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.VoidType" />
	</generate-with>	

	<generate-with class="rocket.generator.test.generator.rebind.NewConstructorWithInitializerGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewConcreteClassWithInitializer" />
	</generate-with>
	
	<generate-with class="rocket.generator.test.generator.rebind.ConstructorGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.ConstructorTest" />
	</generate-with>
	
	<generate-with class="rocket.generator.test.generator.rebind.FieldGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.FieldTest" />
	</generate-with>
	
	<generate-with class="rocket.generator.test.generator.rebind.MethodGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.MethodTest" />
	</generate-with>
	
	<generate-with class="rocket.generator.test.generator.rebind.NewConcreteClassGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewConcreteClass" />
	</generate-with>
	
	<generate-with class="rocket.generator.test.generator.rebind.NewConcreteClassWithConstructorGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewConcreteClassWithConstructor" />
	</generate-with>

	<generate-with class="rocket.generator.test.generator.rebind.NewConcreteClassWithFieldGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewConcreteClassWithField" />
	</generate-with>
	
	<generate-with class="rocket.generator.test.generator.rebind.NewConcreteClassWithMethodGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewConcreteClassWithMethod" />
	</generate-with>

	<generate-with class="rocket.generator.test.generator.rebind.NewConcreteClassWithConstructorsFieldsAndMethodsGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewConcreteClassWithConstructorsFieldsAndMethods" />
	</generate-with>
	
	<generate-with class="rocket.generator.test.generator.rebind.NewNestedClassGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewNestedClass" />
	</generate-with>

	<generate-with class="rocket.generator.test.generator.rebind.NewNestedInterfaceGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewNestedInterface" />
	</generate-with>

	<generate-with class="rocket.generator.test.generator.rebind.NewNestedAnonymousClassGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewNestedAnonymousClass" />
	</generate-with>

	<generate-with class="rocket.generator.test.generator.rebind.NewNestedAnonymousInterfaceGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewNestedAnonymousInterface" />
	</generate-with>

	<generate-with class="rocket.generator.test.generator.rebind.NewJsniFieldGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewJsniField" />
	</generate-with>
	
	<generate-with class="rocket.generator.test.generator.rebind.NewJsniMethodGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.NewJsniMethod" />
	</generate-with>

	<generate-with class="rocket.generator.test.generator.rebind.SuperTypeGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.SuperType" />
	</generate-with>

	<generate-with class="rocket.generator.test.generator.rebind.SubTypesGenerator">
		<when-type-assignable class="rocket.generator.test.generator.client.SubTypes" />
	</generate-with>

</module>

